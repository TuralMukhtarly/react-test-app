{"version":3,"sources":["styles/styles.ts","components/Bookmarks.tsx","components/Images.tsx","api/api.ts","redux/mainReducer.ts","components/Search.tsx","routes/path.ts","routes/Routes.tsx","components/Menu.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","background","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","paginator","marginTop","flexWrap","button","rootList","imageList","height","icon","color","field","margin","backdrop","avatar","position","left","title","textAlign","fontFamily","imagesBlock","link","textDecoration","rootSearch","input","flex","iconButton","Bookmarks","useState","setIds","classes","className","pictures","keys","Object","localStorage","i","length","push","JSON","parse","getItem","storage","map","e","srcPath","farm","server","id","secret","src","style","border","Button","variant","size","float","onClick","removeItem","Images","images","useSelector","state","reducer","setTag","onChangeHandler","currentTarget","value","photos","photo","Paper","alt","TextField","label","onChange","setItem","stringify","instance","axios","baseURL","api","searchText","pageNumber","get","then","res","data","initialState","page","pages","perpage","total","stat","Search","dispatch","useDispatch","requestText","setRequestText","React","setPage","pagesCount","setPagesCount","setState","useEffect","type","catch","console","log","InputBase","onKeyPress","charCode","stopPropagation","preventDefault","err","onBlur","placeholder","IconButton","Pagination","count","Math","ceil","shape","event","PATH","Routes","exact","path","component","Photos","Menu","useTheme","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","edge","Typography","noWrap","Avatar","Drawer","paper","direction","List","to","ListItem","ListItemIcon","ListItemText","primary","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.489285a6.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    background:\r\n      \"linear-gradient(90deg, rgba(48,47,77,1) 2%, rgba(185,183,225,1) 87%)\",\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    background:\r\n      \"linear-gradient(90deg, rgba(48,47,77,1) 2%, rgba(185,183,225,1) 87%)\",\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  paginator: {\r\n    justifyContent: \"flex-end\",\r\n    display: \"flex\",\r\n    marginTop: \"30px\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n  },\r\n  rootList: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"row\",\r\n  },\r\n  imageList: {\r\n    width: 1330,\r\n    height: 480,\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\",\r\n  },\r\n  field: {\r\n    display: \"flex\",\r\n    margin: \"5px 0 5px 0\",\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n  avatar: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    position: \"absolute\",\r\n    left: \"90%\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontFamily: \"'Raleway', sans-serif\",\r\n  },\r\n  imagesBlock: {\r\n    marginTop: \"10px\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n  },\r\n  rootSearch: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n    display: \"flex\",\r\n    margin: \"5px 0 5px 0\",\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n}));\r\n","import { Button } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { PhotoType } from \"../api/api\";\r\nimport { useStyles } from \"../styles/styles\";\r\n\r\nfunction Bookmarks() {\r\n  const [ids, setIds] = useState<string>(\"\");\r\n  const classes = useStyles();\r\n\r\n  const storage = () => {\r\n    let pictures: Array<PhotoType> = [];\r\n    let keys: Array<string> = Object.keys(localStorage);\r\n    for (let i = keys.length; i--; ) {\r\n      // @ts-ignore\r\n      pictures.push(JSON.parse(localStorage.getItem(keys[i])));\r\n    }\r\n    return pictures;\r\n  };\r\n  return (\r\n    <div className={classes.rootList}>\r\n      {storage().map((e) => {\r\n        const srcPath =\"https://farm\" + e.farm + \".staticflickr.com/\" + e.server + \"/\" + e.id + \"_\" + e.secret + \".jpg\";\r\n        return (\r\n          <ul key={e.id}>\r\n            <div>\r\n              <img\r\n                src={srcPath}\r\n                width=\"230px\"\r\n                height=\"240px\"\r\n                style={{ border: \"5px solid lightblue\" }}\r\n              />\r\n              <div>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                  style={{ float: \"right\" }}\r\n                  onClick={() => {\r\n                    localStorage.removeItem(e.id);\r\n                    setIds(e.id);\r\n                  }}\r\n                >\r\n                  Remove it\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </ul>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\nexport default Bookmarks;\r\n","import { Paper } from \"@material-ui/core\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ResponseType } from \"../api/api\";\r\nimport { AppRootStateType } from \"../redux/store\";\r\nimport { useStyles } from \"../styles/styles\";\r\n\r\nfunction Images() {\r\n  const classes = useStyles();\r\n  const images = useSelector<AppRootStateType, ResponseType>(\r\n    (state) => state.reducer\r\n  );\r\n\r\n  const [tag, setTag] = useState<string>(\"\");\r\n  const [ids, setIds] = useState<string>(\"\");\r\n\r\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setTag(e.currentTarget.value);\r\n  };\r\n\r\n  const setValues = (\r\n    farm: number,\r\n    server: string,\r\n    id: string,\r\n    secret: string,\r\n    title: string\r\n  ) => {\r\n    localStorage.setItem(\r\n      id,\r\n      JSON.stringify({ farm, server, id, secret, title })\r\n    );\r\n    setIds(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.rootList}>\r\n      {images.photos.photo.map((e) => {\r\n        const srcPath =\r\n          \"https://farm\" +\r\n          e.farm +\r\n          \".staticflickr.com/\" +\r\n          e.server +\r\n          \"/\" +\r\n          e.id +\r\n          \"_\" +\r\n          e.secret +\r\n          \".jpg\";\r\n        return (\r\n          <ul key={e.id}>\r\n            <Paper>\r\n              <img src={srcPath} alt=\"#\" width=\"230px\" height=\"240px\" />\r\n              <div>\r\n                <div>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"some tag?\"\r\n                    onChange={onChangeHandler}\r\n                    className={classes.field}\r\n                  />\r\n                </div>\r\n                {!!localStorage.getItem(e.id) ? (\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"medium\"\r\n                    color=\"secondary\"\r\n                    style={{ float: \"right\" }}\r\n                    onClick={() => {\r\n                      localStorage.removeItem(e.id);\r\n                      setIds(e.secret);\r\n                    }}\r\n                  >\r\n                    Remove it\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"medium\"\r\n                    color=\"primary\"\r\n                    style={{ float: \"right\" }}\r\n                    onClick={() =>\r\n                      setValues(e.farm, e.server, e.id, e.secret, e.title)\r\n                    }\r\n                  >\r\n                    Bookmark it\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </Paper>\r\n          </ul>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Images;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL:\r\n    \"https://api.flickr.com/services/rest/?method=flickr.photos.search&format=json&nojsoncallback=true&api_key=88511e631d64958716f46a5c31c01824&per_page=20\",\r\n});\r\n\r\nexport const api = {\r\n  getImages(searchText: string, pageNumber: number) {\r\n    return instance\r\n      .get<ResponseType>(`&page=${pageNumber}&text=${searchText}`)\r\n      .then((res) => res.data);\r\n  },\r\n};\r\n\r\nexport type ResponseType = {\r\n  photos: PhotosType;\r\n  stat: string;\r\n};\r\n\r\nexport type PhotosType = {\r\n  page: number;\r\n  pages: number;\r\n  perpage: number;\r\n  total: number;\r\n  photo: Array<PhotoType>;\r\n};\r\n\r\nexport type PhotoType = {\r\n  id: string;\r\n  owner: string;\r\n  secret: string;\r\n  server: string;\r\n  farm: number;\r\n  title: string;\r\n  ispublic: number;\r\n  isfriend: number;\r\n  isfamily: number;\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { api, ResponseType } from \"../api/api\";\r\n\r\ntype initialStateType = ResponseType;\r\nconst initialState: initialStateType = {\r\n  photos: {\r\n    page: 1,\r\n    pages: 234,\r\n    perpage: 20,\r\n    total: 12,\r\n    photo: [],\r\n  },\r\n  stat: \"ok\",\r\n};\r\n\r\ntype GetImagesACType = {\r\n  type: string;\r\n  images: ResponseType;\r\n};\r\n\r\ntype getImagesType = ReturnType<typeof getImagesAC>;\r\nexport type ActionType = getImagesType;\r\n\r\nexport const mainReducer = (\r\n  state = initialState,\r\n  action: ActionType\r\n): initialStateType => {\r\n  switch (action.type) {\r\n    case \"IMAGES/GET_IMAGES\":\r\n      return { ...state, ...action.images };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport const getImagesAC = (images: ResponseType): GetImagesACType => {\r\n  return {\r\n    type: \"IMAGES/GET_IMAGES\",\r\n    images,\r\n  } as const;\r\n};\r\n\r\nexport const getImagesTC =\r\n  (searchText: string, pageNumber: number) => (dispatch: Dispatch) => {\r\n    api\r\n      .getImages(searchText, pageNumber)\r\n      .then((res) => {\r\n        dispatch(getImagesAC(res));\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"Error:\", { ...e });\r\n      });\r\n  };\r\n","import { Paper } from \"@material-ui/core\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport React, { ChangeEvent, useEffect } from \"react\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ResponseType } from \"../api/api\";\r\nimport { AppRootStateType } from \"../redux/store\";\r\nimport Images from \"./Images\";\r\nimport { useStyles } from \"../styles/styles\";\r\nimport { getImagesTC } from \"../redux/mainReducer\";\r\nimport { InputBase } from \"@material-ui/core\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nfunction Search() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const photos = useSelector<AppRootStateType, ResponseType>(\r\n    (state) => state.reducer\r\n  );\r\n\r\n  const [requestText, setRequestText] = useState<string>(\"\");\r\n  const [page, setPage] = React.useState(1);\r\n  const [pagesCount, setPagesCount] = useState<number>(0);\r\n  const [state, setState] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (requestText !== \"\") {\r\n      dispatch(getImagesTC(requestText, page));\r\n      setPagesCount(photos.photos.pages);\r\n    }\r\n  }, [requestText, page, photos.photos.pages, dispatch]);\r\n\r\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setState(e.currentTarget.value);\r\n  };\r\n  const onClickHandler = () => {\r\n    setRequestText(state);\r\n  };\r\n  const onBlurHandler = () => {\r\n    setRequestText(state);\r\n  };\r\n\r\n  const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    try {\r\n      if (e.charCode === 13) {\r\n        setRequestText(state);\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.rootSearch}>\r\n        <InputBase\r\n          onKeyPress={onKeyPressHandler}\r\n          onBlur={onBlurHandler}\r\n          onChange={onChangeHandler}\r\n          className={classes.input}\r\n          placeholder=\"Search images\"\r\n        />\r\n        <IconButton\r\n          onClick={onClickHandler}\r\n          type=\"submit\"\r\n          className={classes.iconButton}\r\n          aria-label=\"search\"\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Paper>\r\n      {!requestText || photos.photos.photo.length < 1 ? (\r\n        <h2 className={classes.title}>\r\n          No images here. Whould you try to search for anything else?\r\n        </h2>\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <Pagination\r\n              className={classes.paginator}\r\n              count={Math.ceil(pagesCount / 15)}\r\n              page={page}\r\n              shape=\"rounded\"\r\n              onChange={handleChange}\r\n              color={\"primary\"}\r\n            />\r\n          </div>\r\n          <div className={classes.imagesBlock}>\r\n            <Images />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","export const PATH = {\r\n  MAIN: \"/\",\r\n  BOOKMARS: \"/bookmarks\",\r\n};\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Bookmarks from \"../components/Bookmarks\";\r\nimport Photos from \"../components/Search\";\r\nimport { PATH } from \"./path\";\r\n\r\nfunction Routes() {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path={PATH.MAIN} component={Photos} />\r\n        <Route path={PATH.BOOKMARS} component={Bookmarks} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport CloudIcon from \"@material-ui/icons/Cloud\";\r\nimport BookmarksIcon from \"@material-ui/icons/Bookmarks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Routes from \"../routes/Routes\";\r\nimport { useStyles } from \"../styles/styles\";\r\nimport { PATH } from \"../routes/path\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nexport default function Menu() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Image Finder\r\n          </Typography>\r\n          <span className={classes.avatar}>\r\n            <Avatar src=\"/broken-image.jpg\" />\r\n          </span>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n\r\n        <List>\r\n          <Link to={PATH.MAIN} className={classes.link}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <CloudIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"All Images\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to={PATH.BOOKMARS} className={classes.link}>\r\n            <ListItem button key=\"aLL\">\r\n              <ListItemIcon>\r\n                <BookmarksIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Bookmarks\" />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Routes />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Menu from \"./components/Menu\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Menu />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { mainReducer } from \"./mainReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  reducer: mainReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}